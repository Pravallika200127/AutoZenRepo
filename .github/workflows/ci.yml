name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # âœ… Step 1: Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # âœ… Step 2: Set up Java Environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # âœ… Step 3: Cache Maven Dependencies (for faster builds)
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # âœ… Step 4: Make Maven Executable
      - name: Grant Execute Permission to Maven Wrapper
        run: chmod +x mvnw

      # âœ… Step 5: Run Tests (with TestRail integration)
      - name: Run Tests with Maven
        run: mvn clean test -Dbrowser=chrome -Dheadless=true
        env:
          # ðŸ”¹ TestRail integration (picked up by ConfigReader or Hooks)
          TESTRAIL_ENABLED: "true"
          TESTRAIL_URL: ${{ secrets.TESTRAIL_URL }}
          TESTRAIL_USER: ${{ secrets.TESTRAIL_USER }}
          TESTRAIL_API_KEY: ${{ secrets.TESTRAIL_API_KEY }}
          TESTRAIL_PROJECT_ID: ${{ secrets.TESTRAIL_PROJECT_ID }}
          TESTRAIL_RUN_ID: ${{ secrets.TESTRAIL_RUN_ID }}
          
          # ðŸ”¹ General Config
          BASE_URL: ${{ secrets.BASE_URL }}
          BROWSER: chrome

      # âœ… Step 6: Upload Test Results (Extent Report + Screenshots)
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ExtentReports
          path: |
            reports/
            target/cucumber-reports/
            target/surefire-reports/
